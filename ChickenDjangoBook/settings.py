"""
Django settings for ChickenDjangoBook project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG') == 'True'

ALLOWED_HOSTS = ["chickenbook.pythonanywhere.com", "127.0.0.1", 'testserver']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    "crispy_forms",
    "crispy_bootstrap5",
    
    'cards',
    'accounts',
    'chickenmessages',
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

AUTHENTICATION_BACKENDS = [
    'accounts.login_backend.LoginBackend',
    'django.contrib.auth.backends.ModelBackend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ChickenDjangoBook.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ 
            '/home/chickenbook/ChickenDjangoBook/templates', 
            BASE_DIR / 'templates/',
            '/home/chickenbook/ChickenDjangoBook',
            BASE_DIR
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'cards.context_processors.pending_messages_count',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ChickenDjangoBook.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'accounts.User'

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
# It is not possible to use the constant STATIC_FILES and STATIC_ROOT at the same time,
# therefore there is an IF ... ELSE clause
if DEBUG:
    STATICFILES_DIRS = [
        BASE_DIR / 'static',
        ]
else:
    STATIC_ROOT = BASE_DIR / 'static'

STATIC_URL = '/static/'


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = '/'

LOGOUT_REDIRECT_URL = 'login'

LOGIN_URL = 'login'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# host email
EMAIL_HOST_USER=os.environ.get('EMAIL_HOST_USER')

if DEBUG == True:
    # Settings the email server for development
    EMAIL_BACKEND = os.environ.get('EMAIL_BACKEND_DEVELOPMENT')
    # only for saving email to the file
    EMAIL_FILE_PATH = BASE_DIR / os.environ.get('EMAIL_FILE_PATH')
    EMAIL_FILENAME = os.environ.get('EMAIL_FILENAME')
else:
    # Settings the email server for production
    EMAIL_BACKEND=os.environ.get('EMAIL_BACKEND_PRODUCTION')
    EMAIL_PORT=int(os.environ.get('EMAIL_PORT'))
    EMAIL_USE_TLS=os.environ.get('EMAIL_USE_TLS').upper() == 'TRUE'
    EMAIL_HOST=os.environ.get('EMAIL_HOST')
    EMAIL_HOST_PASSWORD=os.environ.get('EMAIL_HOST_PASSWORD')